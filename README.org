* Presentation: Creating standalone UI applications for CLI tools using emacs and docker
** =tmux=
Years ago =NickM=, the creator of tmux gave a talk at St Davids lecture theatre. I didn't go, but I was distraught when I found out I had missed the event.

https://slideplayer.com/slide/13459497/

** Why the talk?
I find myself sitting in St David's lecture right now =18.09.20= designing a talk for CodeCraft.

It's about designing UIs for CLI tools with emacs and docker.

Earlier in the year I was working for FMG (Fortescue Metals Group), working on self-driving cars in the Pilbra.

Specifically, I was working in the tooling infrastructure and designing/building the deployment infrastructure.

I had a dream to manage deployments of between clouds and the docker swarm through a single-unified emacs application.

So this is a project unfinished. I can't demonstrate deploying software to the ALVs through emacs but for didactic purposes I can substitute for something much simpler, tmux servers.

** emacs is perhaps the best CLI *shell*
For example when comparing applications built in emacs over ones 

| standalone / worse | emacs-based / better |
|--------------------+----------------------|
| tig                | magit                |

*** When this isn't the case, emacs can encapsulate the application